name: "Release Firmware CI/CD for MIDI_Host"

on:
  workflow_dispatch:
  push:
    tags:
     - 'v*.*.*'
     
permissions:
  contents: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: latest
        target: esp32s3
        path: 'firmware'

    - name: Run Unit Tests
      run: |
        cd firmware/main/host_test
        ./test.sh
        ./test.sh >> test.txt

    - uses: tsickert/discord-webhook@v4.0.0
      with:
        webhook-url: ${{ secrets.WEBHOOK_URL }}
        content: "Heyo, Knot Unit Tests are ready!"
        filename: "firmware/main/host_test/test.txt"

    - name: Convert to uf2
      run: |
        cd firmware
        sudo python3 ./tools/uf2conv.py -f ESP32S3 ./build/midi_host_fw.bin -b 0x0 -c -o ./output/midi_host_fw.uf2

    - name: Set Date
      run: echo "action_date=$(date +'%Y-%m-%d-%H%M')" >> $GITHUB_ENV
           
    - name: Set env
      shell: bash
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: See env
      run: echo "${{ env.RELEASE_VERSION }}"

    - name: Copy and rename the artifacts
      run: |
        ls
        cp firmware/output/midi_host_fw.uf2 knot_release_${{ env.action_date }}.uf2

    - name: Retrieve results
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: Nightly Knot Firmware
        path: firmware/output/
        if-no-files-found: warn

    - name: Zipping artifacts for Discord      
      uses: vimtor/action-zip@v1
      with:
        files: knot_release_${{ env.action_date }}.uf2
        dest: knot_release_${{ env.action_date }}.zip

    - name: Zipping artifacts for Github Release   
      uses: vimtor/action-zip@v1
      with:
        files: knot_release_${{ env.action_date }}.uf2
        dest: knot_release.zip     
          
    - uses: tsickert/discord-webhook@v4.0.0
      with:
        webhook-url: ${{ secrets.WEBHOOK_URL }}
        content: "Congrats, the Knot Release Firmware is Fire!"
        filename: "knot_release_${{ env.action_date }}.zip"
          
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        name: Knot  ${{ env.RELEASE_VERSION }} (${{ env.action_date }})
        files: knot_release.zip
        draft: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
